package alternativeto

import (
	"fmt"
	"os"
	"sort"
	"strings"
)

func GenerateMainREADME() (err error) {
	var lines = []string{
		"# alternativeto",
		"A comprehensive list of alternatives to your favorite software.",
		"",
		"**Please do not edit this file directly. Instead, follow the steps outlined in the [Contributing Guidelines](https://github.com/brentadamson/alternativeto/blob/main/.github/contributing.md)**",
		"",
		"## Index",
	}

	// create the index
	categories := []string{}
	for k, _ := range allCompanies {
		categories = append(categories, k)
	}
	sort.Strings(categories)
	for _, category := range categories {
		lines = append(lines, fmt.Sprintf("* [%s](#%s)", category, strings.ToLower(strings.ReplaceAll(category, " ", "-"))))
		// any subcategories?
		subCategories := []string{}
		for k, _ := range allCompanies[category] {
			subCategories = append(subCategories, k)
		}
		sort.Strings(subCategories)
		for _, subCategory := range subCategories {
			if subCategory == noSubCategory {
				continue
			}
			lines = append(lines, fmt.Sprintf("  * [%s](#%s)", subCategory, strings.ToLower(strings.ReplaceAll(subCategory, " ", "-"))))
		}
	}

	// add the companies
	for _, category := range categories {
		// TODO: consolidate this sorting subCategories code since it's the exact same as above
		subCategories := []string{}
		for k, _ := range allCompanies[category] {
			subCategories = append(subCategories, k)
		}
		sort.Strings(subCategories)

		for i, subCategory := range subCategories {
			lines = append(lines, "")
			if i == 0 {
				lines = append(lines, fmt.Sprintf("### %s", category))
			}
			if subCategory != noSubCategory {
				lines = append(lines, fmt.Sprintf("#### %s", subCategory))
			}

			lines = append(lines, "Website | Open Source")
			lines = append(lines, "|---|---|")

			companies := allCompanies[category][subCategory]
			sort.Slice(companies, func(i, j int) bool {
				return companies[i].Name < companies[j].Name
			})
			for _, company := range companies {
				var yesNo = "No"
				if company.OpenSource {
					yesNo = "Yes"
				}

				lines = append(lines, fmt.Sprintf(`| [%s](%s) | %s |`, company.Name, company.Website, yesNo))
			}
		}

		lines = append(lines, "")
		lines = append(lines, "**[â¬† Back to Index](#index)**")
		lines = append(lines, "")
	}

	var contents = []byte(strings.Join(lines, "\n"))
	return os.WriteFile("README.md", contents, 0644)
}
